     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                  ;Se dau doua siruri de octeti S1 si S2. Sa se construiasca sirul D prin concatenarea elementelor din sirul S1 1uate de la stanga spre dreapta si a elementelor din sirul S2 luate de la dreapta spre stanga. 
    15                                  ;Exemplu:
    16                                  ;S1: 1, 2, 3, 4
    17                                  ;S2: 5, 6, 7
    18                                  ;D: 1, 2, 3, 4, 7, 6, 5
    19                                  
    20 00000000 01020304                 s1 db 1 , 2 , 3 , 4
    21                                   lungS1 equ $-s1
    22 00000004 050607                   s2 db 5 , 6 ,7
    23                                   lungS2 equ $-s2
    24 00000007 00<rept>                 d times (lungS1 + lungS2) db 0
    25                                   
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                      
    30 00000000 B904000000                  mov ecx, lungS1
    31 00000005 FC                          cld
    32 00000006 BE[00000000]                mov esi, s1
    33 0000000B BF[07000000]                mov edi, d
    34                                      
    35                                      repeta:
    36 00000010 A4                          movsb
    37 00000011 E2FD                        loop repeta
    38                                      
    39 00000013 B903000000                  mov ecx, lungS2
    40 00000018 BE[06000000]                mov esi, s2 + lungS2 - 1
    41                                      repeta2:
    42 0000001D FD                          std
    43 0000001E AC                          lodsb
    44 0000001F FC                          cld
    45 00000020 AA                          stosb
    46 00000021 E2FA                        loop repeta2
    47                                          ; ...
    48                                      
    49                                          ; exit(0)
    50 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
