     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;a,b,c,d-byte, e,f,g,h-word
    15                                      ;(2*d+e)/a 
    16 00000000 05                          a db 5
    17 00000001 0A00                        e dw 10
    18 00000003 07                          d db 7
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[03000000]                    mov al,[d]
    24 00000005 B302                            mov bl,2
    25 00000007 F6E3                            mul bl ; in ax am 2*d
    26 00000009 668B1D[01000000]                mov bx,[e]
    27 00000010 6601D8                          add ax,bx ;in ax am 2*d+e
    28 00000013 8A1D[00000000]                  mov bl,[a]
    29 00000019 F6F3                            div byte bl ; in al am catul si in ah restul rezultatului
    30                                          ; exit(0)
    31 0000001B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 0000001D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
