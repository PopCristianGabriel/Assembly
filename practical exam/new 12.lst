     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 1234567801020304            a db 12h,34h,56h,78h,01h,02h,03h,04h
    15 00000008 3412785602010403            b dw 1234h,5678h,0102h,0304h
    16 00000010 7856341204030201            c dd 12345678h,01020304h
    17 00000018 0403020178563412            d dq 1234567801020304h
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A1[13000000]                    mov eax, [c+3]
    23                                          mov bx,eax
    23          ******************       error: invalid combination of opcode and operands
    24                                          
    25                                          ; exit(0)
    26 00000005 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    27 00000007 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
