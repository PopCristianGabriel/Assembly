     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,printf,fopen,fclose,fprintf
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fprintf msvcrt.dll              ; tell nasm that exit exists even if we won't be defining it
    13                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19 00000000 00000000                    s dd 0
    20 00000004 656E74657220612073-         message db "enter a string:",0
    20 0000000D 7472696E673A00     
    21 00000014 257300                      stringFormat db "%s",0
    22                                      
    23 00000017 6100                        accesMode db "a",0
    24 00000019 616963692E74787400          fileName db "aici.txt",0
    25 00000022 FFFFFFFF                    fileDescriptor dd -1
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ; ...
    30                                          
    31                                          
    32                                          
    33                                          
    34 00000000 68[17000000]                    push dword accesMode
    35 00000005 68[19000000]                    push dword fileName
    36 0000000A FF15[00000000]                  call [fopen]
    37 00000010 83C408                          add esp, 4*2
    38                                          
    39 00000013 A3[22000000]                    mov [fileDescriptor],eax
    40 00000018 83F800                          cmp eax,0
    41 0000001B 7440                            je final
    42                                          
    43                                          bucla:
    44 0000001D 68[04000000]                    push dword message
    45 00000022 FF15[00000000]                  call [printf]
    46 00000028 83C404                          add esp, 4
    47                                          
    48 0000002B 68[00000000]                    push dword s
    49 00000030 68[14000000]                    push dword stringFormat
    50 00000035 FF15[00000000]                  call [scanf]
    51 0000003B 83C408                          add esp,4*2
    52                                          
    53 0000003E 833D[00000000]30                cmp [s],dword "0"
    54 00000045 7416                            je final
    55                                          
    56 00000047 68[00000000]                    push dword s
    57 0000004C FF35[22000000]                  push dword [fileDescriptor]
    58 00000052 FF15[00000000]                  call [fprintf]
    59 00000058 83C408                          add esp, 4*2
    60                                          
    61                                          
    62 0000005B EBC0                            jmp bucla
    63                                          
    64                                          final:
    65 0000005D FF35[22000000]                  push dword [fileDescriptor]
    66 00000063 FF15[00000000]                  call [fclose]
    67 00000069 83C404                          add esp,4
    68                                          ; exit(0)
    69 0000006C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    70 0000006E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
