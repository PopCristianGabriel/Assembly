     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 33353732                    a db '3' , '5', '7' ,'2'
    15                                      lengthA equ $ - a
    16 00000004 3930313137                  b db '9' , '0' , '1' , '1', '7'
    17                                      lengthB equ $ - b
    18 00000009 00<rept>                    rez times (lengthA+lengthB) db 0
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 31C9                        xor ecx,ecx
    24 00000002 B905000000                  mov ecx,lengthB
    25 00000007 E336                        jecxz sfarsit
    26 00000009 BE04000000                  mov esi,lengthB-1
    27 0000000E BF00000000                  mov edi,0
    28                                      Repeta:
    29 00000013 8A86[04000000]                  mov al,[b+esi]
    30 00000019 8887[09000000]                  mov [rez+edi],al
    31 0000001F 4E                              dec esi
    32 00000020 47                              inc edi
    33 00000021 E2F0                        loop Repeta
    34                                      
    35 00000023 B904000000                  mov ecx,lengthA
    36 00000028 E315                        jecxz sfarsit
    37 0000002A BE03000000                  mov esi,lengthA-1
    38                                      Repeta2:
    39 0000002F 8A86[00000000]                  mov al,[a+esi]
    40 00000035 8887[09000000]                  mov [rez+edi],al
    41 0000003B 4E                              dec esi
    42 0000003C 47                              inc edi
    43 0000003D E2F0                        loop Repeta2
    44                                      
    45                                      sfarsit:
    46                                          ; exit(0)
    47 0000003F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000041 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
